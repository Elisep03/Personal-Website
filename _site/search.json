[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site: me fast\n1 + 1"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Elise Pham",
    "section": "",
    "text": "Hi there! I’m Elise, a fourth-year undergraduate student at UCLA pursuing a major in statistics and data science student. I’m passionate about turning complex data into tangible results and helping people understand more about elaborate concepts in a clear and engaging way.\nI am actively seeking opportunities to develop innovative solutions where I can apply my strong analytical and teamwork skills to derive actionable insights."
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "Elise Pham",
    "section": "",
    "text": "Hi there! I’m Elise, a fourth-year undergraduate student at UCLA pursuing a major in statistics and data science student. I’m passionate about turning complex data into tangible results and helping people understand more about elaborate concepts in a clear and engaging way.\nI am actively seeking opportunities to develop innovative solutions where I can apply my strong analytical and teamwork skills to derive actionable insights."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Elise Pham",
    "section": "Education",
    "text": "Education\nUniversity of California, Los Angeles\nB.S. Statistics and Data Science Sept 2023 - Jun 2025"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Elise Pham",
    "section": "Experience",
    "text": "Experience\nData Analyst | DataRes Club: Consulting | Oct 2024 - Present\nMath and Computer Science Tutor | Evergreen Valley College | Aug 2022 - May 2023\nData Science Research Intern | San Jose State University | Jun 2022 - Aug 2022\nTechnical Support Specialist Intern | San Jose Digital Inclusion Fund | Jun 2021 - Oct 2021"
  },
  {
    "objectID": "Projects.html",
    "href": "Projects.html",
    "title": "Projects",
    "section": "",
    "text": "test"
  },
  {
    "objectID": "Projects.html#music-analysis-dashboard",
    "href": "Projects.html#music-analysis-dashboard",
    "title": "Projects",
    "section": "",
    "text": "test"
  },
  {
    "objectID": "Projects.html#test",
    "href": "Projects.html#test",
    "title": "Projects",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "music.html",
    "href": "music.html",
    "title": "Elise Pham",
    "section": "",
    "text": "I analyzed a music dataset using SQL and visualized it onto a dashboard using PowerBI. Check out my project in detail on my GitHub.\n```{sql connection=} – # of albums with certifications WITH title AS ( SELECT Album_ID,\nCASE WHEN [US_sales_(m)] &gt;= 10 THEN ‘DIAMOND’ WHEN [US_sales_(m)] &gt;= 2 THEN ‘MULTI-PLATINUM’ WHEN [US_sales_(m)] &gt;= 1 THEN ‘PLATINUM’ WHEN [US_sales_(m)] &gt;= 0.5 THEN ‘GOLD’ ELSE ‘NA’ END AS Sales_Certification FROM Album )\nSELECT title.Sales_Certification, COUNT(*) AS [Number of Albums] FROM Album a JOIN title ON a.Album_ID = title.Album_ID GROUP BY title.Sales_Certification ORDER BY [Number of Albums] ASC;\n– total tour attendance SELECT sum(Attendance) AS Total_Attendance FROM Tour\n– breakdown by artist SELECT Artist.Artist, sum(Attendance) AS Total_Attendance FROM Tour JOIN Artist Artist ON Artist.Artist_ID = Tour.Artist_ID GROUP BY Artist.Artist;\n– breakdown by tour name SELECT Artist.Artist, Tour_name, sum(Attendance) AS Total_Attendance FROM Tour JOIN Artist Artist ON Artist.Artist_ID = Tour.Artist_ID GROUP BY Artist.Artist, Tour.Tour_name ORDER BY Artist.Artist ASC;\n– top 3 cities SELECT TOP 3 sum(Show.Revenue_$) AS Total_Revenue, City.City FROM Show JOIN Venue Venue ON Show.Venue_ID = Venue.Venue_ID JOIN City City ON Venue.City_ID = City.City_ID GROUP BY City.City ORDER BY Total_Revenue DESC;\n– frequency of album type Select Album_Type.Album_type, count(Album_Type.Album_type) AS Album_Frequency FROM Album JOIN Album_Type Album_Type ON Album.Album_type_ID = Album_Type.Album_type_ID GROUP BY Album.Album_type_ID, Album_Type.Album_type;\n– most popular artist from each country (determined by tour show revenue)\nWITH Revenue_Per_Artist AS ( SELECT Artist.Artist, Country.Country, SUM(Show.Revenue_$) AS Total_Revenue FROM Artist JOIN Tour ON Artist.Artist_ID = Tour.Artist_ID JOIN Show ON Tour.Tour_ID = Show.Tour_ID JOIN Venue ON Show.Venue_ID = Venue.Venue_ID JOIN City ON Venue.City_ID = City.City_ID JOIN Country ON City.Country_ID = Country.Country_ID GROUP BY Artist.Artist, Country.Country ), Ranked_Revenue AS ( SELECT Artist, Country, Total_Revenue, ROW_NUMBER() OVER (PARTITION BY Country ORDER BY Total_Revenue DESC) AS rn FROM Revenue_Per_Artist ) SELECT Artist, Country, Total_Revenue FROM Ranked_Revenue WHERE rn = 1 AND Total_Revenue IS NOT NULL ORDER BY Country; ```"
  },
  {
    "objectID": "Projects/music.html",
    "href": "Projects/music.html",
    "title": "Elise Pham",
    "section": "",
    "text": "I analyzed a music dataset using SQL and visualized it onto a dashboard using PowerBI. Check out my project in detail on my GitHub.\n```{sql connection=} – # of albums with certifications WITH title AS ( SELECT Album_ID,\nCASE WHEN [US_sales_(m)] &gt;= 10 THEN ‘DIAMOND’ WHEN [US_sales_(m)] &gt;= 2 THEN ‘MULTI-PLATINUM’ WHEN [US_sales_(m)] &gt;= 1 THEN ‘PLATINUM’ WHEN [US_sales_(m)] &gt;= 0.5 THEN ‘GOLD’ ELSE ‘NA’ END AS Sales_Certification FROM Album )\nSELECT title.Sales_Certification, COUNT(*) AS [Number of Albums] FROM Album a JOIN title ON a.Album_ID = title.Album_ID GROUP BY title.Sales_Certification ORDER BY [Number of Albums] ASC;\n– total tour attendance SELECT sum(Attendance) AS Total_Attendance FROM Tour\n– breakdown by artist SELECT Artist.Artist, sum(Attendance) AS Total_Attendance FROM Tour JOIN Artist Artist ON Artist.Artist_ID = Tour.Artist_ID GROUP BY Artist.Artist;\n– breakdown by tour name SELECT Artist.Artist, Tour_name, sum(Attendance) AS Total_Attendance FROM Tour JOIN Artist Artist ON Artist.Artist_ID = Tour.Artist_ID GROUP BY Artist.Artist, Tour.Tour_name ORDER BY Artist.Artist ASC;\n– top 3 cities SELECT TOP 3 sum(Show.Revenue_$) AS Total_Revenue, City.City FROM Show JOIN Venue Venue ON Show.Venue_ID = Venue.Venue_ID JOIN City City ON Venue.City_ID = City.City_ID GROUP BY City.City ORDER BY Total_Revenue DESC;\n– frequency of album type Select Album_Type.Album_type, count(Album_Type.Album_type) AS Album_Frequency FROM Album JOIN Album_Type Album_Type ON Album.Album_type_ID = Album_Type.Album_type_ID GROUP BY Album.Album_type_ID, Album_Type.Album_type;\n– most popular artist from each country (determined by tour show revenue)\nWITH Revenue_Per_Artist AS ( SELECT Artist.Artist, Country.Country, SUM(Show.Revenue_$) AS Total_Revenue FROM Artist JOIN Tour ON Artist.Artist_ID = Tour.Artist_ID JOIN Show ON Tour.Tour_ID = Show.Tour_ID JOIN Venue ON Show.Venue_ID = Venue.Venue_ID JOIN City ON Venue.City_ID = City.City_ID JOIN Country ON City.Country_ID = Country.Country_ID GROUP BY Artist.Artist, Country.Country ), Ranked_Revenue AS ( SELECT Artist, Country, Total_Revenue, ROW_NUMBER() OVER (PARTITION BY Country ORDER BY Total_Revenue DESC) AS rn FROM Revenue_Per_Artist ) SELECT Artist, Country, Total_Revenue FROM Ranked_Revenue WHERE rn = 1 AND Total_Revenue IS NOT NULL ORDER BY Country; ```"
  }
]